{"ast":null,"code":"import { DeleteConfirmDialogComponent } from '../delete-confirm-dialog/delete-confirm-dialog.component';\nimport { EmployeeFormDialogComponent } from '../employee-form-dialog/employee-form-dialog.component';\nimport { takeUntil } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Unsub } from '../unsub';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/employee.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/menu\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nfunction EmployeeListComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" First Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employee_r12.firstName, \" \");\n  }\n}\nfunction EmployeeListComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Last name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employee_r13.lastName, \" \");\n  }\n}\nfunction EmployeeListComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Email Id \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", employee_r14.emailId, \" \");\n  }\n}\nfunction EmployeeListComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 14);\n    i0.ɵɵtext(1, \" Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeListComponent_td_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 15)(1, \"a\", 16);\n    i0.ɵɵelement(2, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-menu\", null, 18)(5, \"button\", 19)(6, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_td_22_Template_a_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const employee_r15 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.OpenDialogUpdate(employee_r15.id));\n    });\n    i0.ɵɵtext(7, \" Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"button\", 19)(9, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_td_22_Template_a_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const employee_r15 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.openDialog(employee_r15.id));\n    });\n    i0.ɵɵtext(10, \" Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"button\", 19)(12, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_td_22_Template_a_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const employee_r15 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.employeeDetails(employee_r15.id));\n    });\n    i0.ɵɵtext(13, \" View\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r16);\n  }\n}\nfunction EmployeeListComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 21);\n  }\n}\nfunction EmployeeListComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\nfunction EmployeeListComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 23)(1, \"td\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r0 = i0.ɵɵreference(8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"No data matching the filter \\\"\", _r0.value, \"\\\"\");\n  }\n}\nexport class EmployeeListComponent extends Unsub {\n  constructor(employeeService, dialog) {\n    super();\n    this.employeeService = employeeService;\n    this.dialog = dialog;\n    this.displayedColumns = ['firstName', 'lastName', 'emailId', 'actions'];\n  }\n  ngOnInit() {\n    this.employeeService.getAllEmployees().pipe(takeUntil(this.unsbscribe)).subscribe(emp => {\n      this.dataSource = new MatTableDataSource(emp);\n      console.log(this.dataSource);\n      this.dataSource.filterPredicate = function (record, filter) {\n        return record.firstName.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n      };\n    });\n  }\n  getEmployees() {\n    this.dataSource = this.employeeService.getAllEmployees();\n  }\n  applyFilter(word) {\n    const filterValue = word;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  //Create Employee Section\n  OpenDialogCreate() {\n    const dialogRef = this.dialog.open(EmployeeFormDialogComponent, {\n      data: {\n        typeOperation: \"Create\"\n      }\n    });\n    dialogRef.afterClosed().subscribe(rslt => {\n      if (rslt) this.saveEmployee(rslt);\n    });\n  }\n  saveEmployee(employee) {\n    this.employeeService.createEmployee(employee).subscribe(() => {\n      this.getEmployees();\n    });\n  }\n  //Update Employee Section\n  OpenDialogUpdate(id) {\n    const dialogRef = this.dialog.open(EmployeeFormDialogComponent, {\n      data: {\n        typeOperation: \"Update\",\n        id: id\n      }\n    });\n    dialogRef.afterClosed().subscribe(rslt => {\n      if (rslt) this.updateEmployee(id, rslt);\n    });\n  }\n  updateEmployee(id, employee) {\n    this.employeeService.updateEmployee(id, employee).subscribe(data => {\n      this.getEmployees();\n    });\n  }\n  // Delete Section\n  deleteEmployee(id) {\n    this.employeeService.deleteEmployee(id).subscribe(data => {\n      console.log(data);\n      this.getEmployees();\n    });\n  }\n  openDialog(id) {\n    const dialogRef = this.dialog.open(DeleteConfirmDialogComponent);\n    dialogRef.afterClosed().subscribe(rslt => {\n      if (rslt) this.deleteEmployee(id);\n    });\n  }\n  // Employee Details\n  employeeDetails(id) {\n    const dialogRef = this.dialog.open(EmployeeFormDialogComponent, {\n      data: {\n        typeOperation: \"details\",\n        id: id\n      }\n    });\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 26,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"btn\", \"btn-primary\", \"newEmp\", 3, \"click\"], [\"matInput\", \"\", \"placeholder\", \"Ex. ium\", \"ngModel\", \"\", 3, \"keyup\"], [\"input\", \"\"], [\"mat-table\", \"\", 1, \"mat-elevation-z7\", \"table\", 3, \"dataSource\"], [\"matColumnDef\", \"firstName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"lastName\"], [\"matColumnDef\", \"emailId\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-button\", \"\", 1, \"btn\", 3, \"matMenuTriggerFor\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-ellipsis-v\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [1, \"btn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"mat-row\"], [\"colspan\", \"4\", 1, \"mat-cell\"]],\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r22 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function EmployeeListComponent_Template_button_click_1_listener() {\n        return ctx.OpenDialogCreate();\n      });\n      i0.ɵɵtext(2, \" New Employee\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"mat-form-field\")(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Filter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 2, 3);\n      i0.ɵɵlistener(\"keyup\", function EmployeeListComponent_Template_input_keyup_7_listener() {\n        i0.ɵɵrestoreView(_r22);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.applyFilter(_r0.value));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"table\", 4);\n      i0.ɵɵelementContainerStart(11, 5);\n      i0.ɵɵtemplate(12, EmployeeListComponent_th_12_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(13, EmployeeListComponent_td_13_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 8);\n      i0.ɵɵtemplate(15, EmployeeListComponent_th_15_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(16, EmployeeListComponent_td_16_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 9);\n      i0.ɵɵtemplate(18, EmployeeListComponent_th_18_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(19, EmployeeListComponent_td_19_Template, 2, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(20, 10);\n      i0.ɵɵtemplate(21, EmployeeListComponent_th_21_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(22, EmployeeListComponent_td_22_Template, 14, 1, \"td\", 7);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(23, EmployeeListComponent_tr_23_Template, 1, 0, \"tr\", 11);\n      i0.ɵɵtemplate(24, EmployeeListComponent_tr_24_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵtemplate(25, EmployeeListComponent_tr_25_Template, 3, 1, \"tr\", 13);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n    }\n  },\n  dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatMenu, i4.MatMenuItem, i4.MatMenuTrigger, i5.MatTable, i5.MatHeaderCellDef, i5.MatHeaderRowDef, i5.MatColumnDef, i5.MatCellDef, i5.MatRowDef, i5.MatHeaderCell, i5.MatCell, i5.MatHeaderRow, i5.MatRow, i5.MatNoDataRow, i6.MatFormField, i6.MatLabel, i7.MatInput],\n  styles: [\".newEmp[_ngcontent-%COMP%] {\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  margin: 0 10px 10px;\\r\\n  background-color: #E8AA42;\\r\\n  border-color: #E8AA42;\\r\\n}\\r\\n\\r\\n.newEmp[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #E57C23;\\r\\n  border-color: #E57C23;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5uZXdFbXAge1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxuICBtYXJnaW46IDAgMTBweCAxMHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNFOEFBNDI7XHJcbiAgYm9yZGVyLWNvbG9yOiAjRThBQTQyO1xyXG59XHJcblxyXG4ubmV3RW1wOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTU3QzIzO1xyXG4gIGJvcmRlci1jb2xvcjogI0U1N0MyMztcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["DeleteConfirmDialogComponent","EmployeeFormDialogComponent","takeUntil","MatTableDataSource","Unsub","i0","EmployeeListComponent","constructor","employeeService","dialog","ngOnInit","getAllEmployees","pipe","unsbscribe","subscribe","emp","dataSource","console","log","filterPredicate","record","filter","firstName","toLocaleLowerCase","includes","getEmployees","applyFilter","word","filterValue","trim","toLowerCase","OpenDialogCreate","dialogRef","open","data","typeOperation","afterClosed","rslt","saveEmployee","employee","createEmployee","OpenDialogUpdate","id","updateEmployee","deleteEmployee","openDialog","employeeDetails","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Gnam\\Documents\\spring\\projects\\springAngularProject 3\\angularclient\\src\\app\\employee-list\\employee-list.component.ts","C:\\Users\\Gnam\\Documents\\spring\\projects\\springAngularProject 3\\angularclient\\src\\app\\employee-list\\employee-list.component.html"],"sourcesContent":["import { Employee } from './../model/employee';\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { EmployeeService } from '../services/employee.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteConfirmDialogComponent } from '../delete-confirm-dialog/delete-confirm-dialog.component';\nimport { EmployeeFormDialogComponent } from '../employee-form-dialog/employee-form-dialog.component';\nimport { takeUntil } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Unsub } from '../unsub';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent extends Unsub implements OnInit {\n  dataSource;\n\n  constructor(private employeeService: EmployeeService, private dialog: MatDialog) {\n    super();\n  }\n\n  ngOnInit() {\n    this.employeeService.getAllEmployees().pipe(takeUntil(this.unsbscribe)).subscribe(emp => {\n      this.dataSource = new MatTableDataSource(emp);\n      console.log(this.dataSource);\n      this.dataSource.filterPredicate = function (record, filter) {\n        return record.firstName.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n      }\n    });\n  }\n  private getEmployees() {\n    this.dataSource = this.employeeService.getAllEmployees();\n  }\n  displayedColumns: string[] = ['firstName', 'lastName', 'emailId', 'actions'];\n\n  applyFilter(word: string) {\n    const filterValue = word;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n\n\n\n\n  //Create Employee Section\n  OpenDialogCreate() {\n    const dialogRef = this.dialog.open(EmployeeFormDialogComponent, { data: { typeOperation: \"Create\" } });\n    dialogRef.afterClosed().subscribe(rslt => {\n      if (rslt) this.saveEmployee(rslt);\n    });\n  }\n\n  saveEmployee(employee: Employee) {\n    this.employeeService.createEmployee(employee).subscribe(() => { this.getEmployees(); });\n  }\n\n\n\n  //Update Employee Section\n  OpenDialogUpdate(id: number) {\n    const dialogRef = this.dialog.open(EmployeeFormDialogComponent, { data: { typeOperation: \"Update\", id: id } });\n    dialogRef.afterClosed().subscribe(rslt => {\n      if (rslt) this.updateEmployee(id, rslt);\n    });\n  }\n  updateEmployee(id: number, employee) {\n    this.employeeService.updateEmployee(id, employee).subscribe(data => {\n      this.getEmployees();\n\n    });\n  }\n\n  // Delete Section\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id).subscribe(data => {\n      console.log(data);\n      this.getEmployees();\n    })\n  }\n  openDialog(id: number): void {\n    const dialogRef = this.dialog.open(DeleteConfirmDialogComponent);\n    dialogRef.afterClosed().subscribe(rslt => {\n      if (rslt)\n        this.deleteEmployee(id);\n    });\n\n  }\n\n  // Employee Details\n  employeeDetails(id: number) {\n    const dialogRef = this.dialog.open(EmployeeFormDialogComponent, { data: { typeOperation: \"details\", id: id } });\n  }\n\n\n}\n\n","<div class=\"row\">\n  <button (click)=\"OpenDialogCreate()\" class=\"btn btn-primary newEmp\"> New Employee</button>\n\n</div>\n<div class=\"row\">\n  <mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter(input.value)\" placeholder=\"Ex. ium\" ngModel #input>\n  </mat-form-field>\n</div>\n\n<div class=\"row\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z7 table\">\n\n\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"firstName\">\n      <th mat-header-cell *matHeaderCellDef> First Name </th>\n      <td mat-cell *matCellDef=\"let employee\"> {{employee.firstName}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"lastName\">\n      <th mat-header-cell *matHeaderCellDef> Last name </th>\n      <td mat-cell *matCellDef=\"let employee\"> {{employee.lastName}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"emailId\">\n      <th mat-header-cell *matHeaderCellDef> Email Id </th>\n      <td mat-cell *matCellDef=\"let employee\"> {{employee.emailId}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> Actions</th>\n      <td mat-cell *matCellDef=\"let employee\">\n        <a mat-button [matMenuTriggerFor]=\"menu\" class=\"btn\"> <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i></a>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item><a (click)=\"OpenDialogUpdate(employee.id)\" class=\"btn \"> Update</a></button>\n          <button mat-menu-item><a (click)=\"openDialog(employee.id)\" class=\"btn \"> Delete</a></button>\n          <button mat-menu-item><a (click)=\"employeeDetails(employee.id)\" class=\"btn\"> View</a></button>\n        </mat-menu>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n    </tr>\n  </table>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}