{"ast":null,"code":"import { DeleteConfirmDialogComponent } from '../delete-confirm-dialog/delete-confirm-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/menu\";\nfunction EmployeeListComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 4)(8, \"a\", 5);\n    i0.ɵɵelement(9, \"i\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-menu\", null, 7)(12, \"button\", 8)(13, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_tr_18_Template_a_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateEmployee(employee_r1.id));\n    });\n    i0.ɵɵtext(14, \" Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 8)(16, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_tr_18_Template_a_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.openDialog(employee_r1.id));\n    });\n    i0.ɵɵtext(17, \" Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 8)(19, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function EmployeeListComponent_tr_18_Template_a_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.employeeDetails(employee_r1.id));\n    });\n    i0.ɵɵtext(20, \" View\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    const _r2 = i0.ɵɵreference(11);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.firstName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.lastName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", employee_r1.emailId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r2);\n  }\n}\nexport class EmployeeListComponent {\n  constructor(employeeService, router, dialog) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.dialog = dialog;\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.employees = this.employeeService.getAllEmployees();\n  }\n  employeeDetails(id) {\n    this.router.navigate(['employee-details', id]);\n  }\n  updateEmployee(id) {\n    this.router.navigate(['update-employee', id]);\n  }\n  deleteEmployee(id) {\n    this.employeeService.deleteEmployee(id).subscribe(data => {\n      console.log(data);\n      this.getEmployees();\n    });\n  }\n  openDialog(id) {\n    const dialogRef = this.dialog.open(DeleteConfirmDialogComponent, {\n      data: id\n    });\n    dialogRef.afterClosed().subscribe(rslt => {\n      console.log(rslt);\n    });\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog));\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[1, \"row\"], [\"routerLink\", \"/create-employee\", 1, \"btn\", \"btn-primary\", \"newEmp\"], [1, \"table\", \"table-striped\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-center\"], [\"mat-button\", \"\", 1, \"btn\", 3, \"matMenuTriggerFor\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-ellipsis-v\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [1, \"btn\", 3, \"click\"]],\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \" Employee List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"a\", 1);\n      i0.ɵɵtext(5, \" New Employee\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"table\", 2)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \" First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \" Last Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \" Email Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \" Actions \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, EmployeeListComponent_tr_18_Template, 21, 4, \"tr\", 3);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 1, ctx.employees));\n    }\n  },\n  dependencies: [i4.NgForOf, i2.RouterLink, i5.MatMenu, i5.MatMenuItem, i5.MatMenuTrigger, i4.AsyncPipe],\n  styles: [\".newEmp[_ngcontent-%COMP%] {\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  margin: 0 10px 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5uZXdFbXAge1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxuICBtYXJnaW46IDAgMTBweCAxMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAMA,SAASA,4BAA4B,QAAQ,0DAA0D;;;;;;;;;;ICYnGC,0BAA6C;IACtCA,YAAyB;IAAAA,iBAAK;IACnCA,0BAAI;IAACA,YAAwB;IAAAA,iBAAK;IAClCA,0BAAI;IAACA,YAAuB;IAAAA,iBAAK;IACjCA,6BAAwB;IACgCA,uBAAmD;IAAAA,iBAAI;IAC7GA,0CAA0B;IACCA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAA2B;IAAA,EAAC;IAAeA,wBAAM;IAAAA,iBAAI;IACvFA,kCAAsB;IAAGA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAAeA,wBAAM;IAAAA,iBAAI;IACnFA,kCAAsB;IAAGA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAA4B;IAAA,EAAC;IAAcA,sBAAI;IAAAA,iBAAI;;;;;IARpFA,eAAyB;IAAzBA,sDAAyB;IACzBA,eAAwB;IAAxBA,qDAAwB;IACxBA,eAAuB;IAAvBA,oDAAuB;IAEZA,eAA0B;IAA1BA,uCAA0B;;;ADVhD,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,eAAgC,EAAUC,MAAc,EAAUC,MAAiB;IAAnF,oBAAe,GAAfF,eAAe;IAA2B,WAAM,GAANC,MAAM;IAAkB,WAAM,GAANC,MAAM;EAAe;EAE3GC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EACQA,YAAY;IAClB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,eAAe,CAACM,eAAe,EAAE;EACzD;EAEAC,eAAe,CAACC,EAAU;IACxB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,kBAAkB,EAAED,EAAE,CAAC,CAAC;EAChD;EAEAE,cAAc,CAACF,EAAU;IACvB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,iBAAiB,EAAED,EAAE,CAAC,CAAC;EAC/C;EAEAG,cAAc,CAACH,EAAU;IACvB,IAAI,CAACR,eAAe,CAACW,cAAc,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACvDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACT,YAAY,EAAE;IACrB,CAAC,CAAC;EACJ;EACAY,UAAU,CAACR,EAAU;IACnB,MAAMS,SAAS,GAAG,IAAI,CAACf,MAAM,CAACgB,IAAI,CAACtB,4BAA4B,EAAE;MAAEiB,IAAI,EAAEL;IAAE,CAAE,CAAC;IAC9ES,SAAS,CAACE,WAAW,EAAE,CAACP,SAAS,CAACQ,IAAI,IAAG;MACvCN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;IACnB,CAAC,CAAC;EAEJ;;AAhCWtB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCblC5B,8BAAiB;MACVA,8BAAa;MAAAA,iBAAK;MAEzBA,8BAAiB;MACkDA,6BAAY;MAAAA,iBAAI;MAInFA,gCAAkD;MAGvCA,4BAAU;MAAAA,iBAAK;MACpBA,2BAAI;MAACA,4BAAU;MAAAA,iBAAK;MACpBA,2BAAI;MAACA,0BAAQ;MAAAA,iBAAK;MAClBA,2BAAI;MAACA,0BAAQ;MAAAA,iBAAK;MAGtBA,8BAAO;MACLA,uEAaK;;MACPA,iBAAQ;;;MAdmBA,gBAAkB;MAAlBA,8DAAkB","names":["DeleteConfirmDialogComponent","i0","EmployeeListComponent","constructor","employeeService","router","dialog","ngOnInit","getEmployees","employees","getAllEmployees","employeeDetails","id","navigate","updateEmployee","deleteEmployee","subscribe","data","console","log","openDialog","dialogRef","open","afterClosed","rslt","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Gnam\\Documents\\spring\\projects\\springAngularProject 3\\angularclient\\src\\app\\employee-list\\employee-list.component.ts","C:\\Users\\Gnam\\Documents\\spring\\projects\\springAngularProject 3\\angularclient\\src\\app\\employee-list\\employee-list.component.html"],"sourcesContent":["import { Observable, map, take } from 'rxjs';\nimport { Employee } from './../model/employee';\nimport { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../services/employee.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteConfirmDialogComponent } from '../delete-confirm-dialog/delete-confirm-dialog.component';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  employees: Observable<Employee[]> | undefined;\n\n  constructor(private employeeService: EmployeeService, private router: Router, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getEmployees();\n  }\n  private getEmployees() {\n    this.employees = this.employeeService.getAllEmployees();\n  }\n\n  employeeDetails(id: number) {\n    this.router.navigate(['employee-details', id]);\n  }\n\n  updateEmployee(id: number) {\n    this.router.navigate(['update-employee', id]);\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id).subscribe(data => {\n      console.log(data);\n      this.getEmployees();\n    })\n  }\n  openDialog(id: number): void {\n    const dialogRef = this.dialog.open(DeleteConfirmDialogComponent, { data: id });\n    dialogRef.afterClosed().subscribe(rslt => {\n      console.log(rslt);\n    });\n\n  }\n\n\n\n}\n","<div class=\"row\">\n  <h2> Employee List</h2>\n</div>\n<div class=\"row\">\n  <a routerLink=\"/create-employee\" class=\"btn btn-primary newEmp\"> New Employee</a>\n\n</div>\n\n<table class=\"table table-striped table-bordered\">\n  <thead>\n    <tr>\n      <th> First Name</th>\n      <th> Last Name </th>\n      <th> Email Id</th>\n      <th> Actions </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let employee of employees|async\">\n      <td> {{ employee.firstName }} </td>\n      <td> {{ employee.lastName }} </td>\n      <td> {{ employee.emailId }} </td>\n      <td class=\"text-center\">\n        <a mat-button [matMenuTriggerFor]=\"menu\" class=\"btn\"> <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i></a>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item><a (click)=\"updateEmployee(employee.id)\" class=\"btn \"> Update</a></button>\n          <button mat-menu-item><a (click)=\"openDialog(employee.id)\" class=\"btn \"> Delete</a></button>\n          <button mat-menu-item><a (click)=\"employeeDetails(employee.id)\" class=\"btn\"> View</a></button>\n        </mat-menu>\n\n      </td>\n    </tr>\n  </tbody>\n</table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}